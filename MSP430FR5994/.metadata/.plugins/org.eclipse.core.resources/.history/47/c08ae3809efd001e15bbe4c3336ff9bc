#include <msp430.h>
#include <stdio.h>
#include "driverlib.h"
#include "memory_util.h"
#include "model.h"
#include "config.h"


int euler_solve(float x[STATE_SPACE], const float u[INPUT_SPACE], float y[EXTRA_STATE_SPACE], float v[MODEL_INPUT_SPACE], float dt) {
    preprocess(x, u, y, v, dt);
    float dx_dt[STATE_SPACE];
    step(x, y, v, dx_dt);



}

void matrixAddInPlace(float** A, const float** B, int rows, int cols) {
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            A[i][j] += B[i][j];
        }
    }
}

int matrixMultiply(const float** A, int rowsA, int colsA, const float** B, int rowsB, int colsB, float** C) {
    if (colsA != rowsB) {
        return -1;
    }
    for (int i = 0; i < rowsA; i++) {
        for (int k = 0; k < colsA; k++) {
            for (int j = 0; j < colsB; j++) {
                C[i][j] += A[i][k] * B[k][j];
            }
        }
    }
    return 1;
}
