#include <msp430.h>
#include <stdio.h>
#include "driverlib.h"
#include "memory_util.h"
#include "model.h"
#include "config.h"


void euler_solve(float x[STATE_SPACE], const float u[INPUT_SPACE], float y[EXTRA_STATE_SPACE], float v[MODEL_INPUT_SPACE], float dt) {
    preprocess(x, u, y, v, dt);

    float dx_dt[STATE_SPACE];
    step(x, y, v, dx_dt);



}

int matrixMultiply(const float* A, int rowsA, int colsA,
                    const float* B, int rowsB, int colsB,
                    float* C) {
    if (colsA != rowsB) {
        printf("Error: Matrix dimensions must match for multiplication (colsA must equal rowsB)\n");
        return -1;
    }

    for (int i = 0; i < rowsA; i++) {
        for (int j = 0; j < colsB; j++) {
            C[i * colsB + j] = 0;  // Initialize the element
            for (int k = 0; k < colsA; k++) {  // colsA is the same as rowsB
                C[i * colsB + j] += A[i * colsA + k] * B[k * colsB + j];
            }
        }
    }
}
